@model IEnumerable<ChemisTrackCrud.Models.ChemicalsInventoryModel>

@{
    ViewBag.Title = "Report";
    ViewBag.Chemicals = "All";
}

<h2 class="item-title"><span class="icon-chemical padd-right"></span>Chemical Stock Report</h2>

<p class="text-right pull-right">
    <a href="#" class="btn btn-info print">Print Report</a>

    @Html.ActionLink("Chemical stock", "Index", "ChemicalInventory", null, new {@class="btn btn-success"})
    @Html.ActionLink("Home", "Index", "Home", null, new { @class = "btn btn-default" })
</p>


<!-- Filter chemicals by its Chemical Name or IUPAC Name or date -->

@using (Html.BeginForm("Report", "ChemicalInventory", FormMethod.Get, new { @class = "pull-left search-form" }))
{
    <p>
        @Html.DropDownList("ChemicalInventoryNames", null, "All", new { @class="form-control"})
        @Html.TextBox("strSearch", null, new {@class="form-control", placeholder="IUPAC Name"})
        @Html.TextBox("startDate", null, new { @class = "form-control datepicker", placeholder="Start Date" })
        @Html.TextBox("endDate", null, new { @class = "form-control datepicker", placeholder="End Date" })

        <input type="Submit" class="btn btn-default"  value="Filter"/>
    </p> 
}


<div class="table-responsive clear-all print-area">
<table class="table table-bordered">
    <tr>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Chemicals.ChemicalName)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.OrderNo)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.SupplierName)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.UnitPrice)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.ExpiredDate)
        </th>
    </tr>

@foreach (var item in Model)
{
    <tr
    @if (item.ExpiredDate <= DateTime.Now)
    {
        @Html.Raw("style = 'background-color: #FDD;'")
    }
    >      
        <td class="text-center">
            <a href="@Url.Action("Details", new { id = item.ChemicalsInventoryID })">@Html.DisplayFor(modelItem => item.Chemicals.ChemicalName)</a>
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.OrderNo)
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.SupplierName)
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.UnitPrice)
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.Amount)
        </td>
        <td class="text-center">
            @Html.DisplayFor(modelItem => item.ExpiredDate)
            @{DateTime dateForExpiry = DateTime.Now.AddDays(30);}
            @if (item.ExpiredDate <= dateForExpiry)
            {
                <span class="expired-notification" data-toggle="tooltip" data-placement="top" title="Stock is going to expire">!</span>
            }
            
        </td>
        
    </tr>
}

</table>
</div>
